events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
	listen 80;
	server_name first.dre.mov www.first.dre.mov;
	return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;

        server_name first.dre.mov www.first.dre.mov;

	ssl_certificate /etc/letsencrypt/live/first.dre.mov/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/first.dre.mov/privkey.pem;

        root /var/www/html;


        index index.php index.htm index.html;


        # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
        sendfile off;
        error_log /dev/stdout info;
        access_log /var/log/nginx/access.log;

        # From wordpress demo global_restrictions.conf
        # Global restrictions configuration file.
        # Designed to be included in any server {} block.
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
            deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }

        location / {
            absolute_redirect off;
            # This is cool because no php is touched for static content.
            # include the "?$args" part so non-default permalinks doesn't break when using query string
            try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on socket
        location ~ \.php$ {
                    include fastcgi_params;
                    fastcgi_pass php:9000;  # Имя контейнера PHP и порт для PHP-FPM
                    fastcgi_index index.php;
                    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                }


        # Expire rules for static content

        # Media: images, icons, video, audio, HTC
        location ~* \.(jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|webp|htc)$ {
            expires max;
            log_not_found off;
        }
        location ~* \.(js|css)$ {
            expires max;
            log_not_found off;
        }
    }
}

